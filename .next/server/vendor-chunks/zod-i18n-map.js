"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/zod-i18n-map";
exports.ids = ["vendor-chunks/zod-i18n-map"];
exports.modules = {

/***/ "(ssr)/./node_modules/zod-i18n-map/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/zod-i18n-map/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeZodI18nMap: () => (/* binding */ makeZodI18nMap),\n/* harmony export */   zodI18nMap: () => (/* binding */ zodI18nMap)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"(ssr)/./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var i18next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! i18next */ \"(ssr)/./node_modules/i18next/dist/esm/i18next.js\");\n// src/index.ts\n\n\nvar jsonStringifyReplacer = (_, value) => {\n  if (typeof value === \"bigint\") {\n    return value.toString();\n  }\n  return value;\n};\nfunction joinValues(array, separator = \" | \") {\n  return array.map((val) => typeof val === \"string\" ? `'${val}'` : val).join(separator);\n}\nvar isRecord = (value) => {\n  if (typeof value !== \"object\" || value === null)\n    return false;\n  for (const key in value) {\n    if (!Object.prototype.hasOwnProperty.call(value, key))\n      return false;\n  }\n  return true;\n};\nvar getKeyAndValues = (param, defaultKey) => {\n  if (typeof param === \"string\")\n    return { key: param, values: {} };\n  if (isRecord(param)) {\n    const key = \"key\" in param && typeof param.key === \"string\" ? param.key : defaultKey;\n    const values = \"values\" in param && isRecord(param.values) ? param.values : {};\n    return { key, values };\n  }\n  return { key: defaultKey, values: {} };\n};\nvar defaultNs = \"zod\";\nvar makeZodI18nMap = (option) => (issue, ctx) => {\n  const { t, ns, handlePath } = {\n    t: i18next__WEBPACK_IMPORTED_MODULE_0__[\"default\"].t,\n    ns: defaultNs,\n    ...option,\n    handlePath: option?.handlePath !== false ? {\n      context: \"with_path\",\n      ns: option?.ns ?? defaultNs,\n      keyPrefix: void 0,\n      ...option?.handlePath\n    } : null\n  };\n  let message;\n  message = (0,zod__WEBPACK_IMPORTED_MODULE_1__.defaultErrorMap)(issue, ctx).message;\n  const path = issue.path.length > 0 && !!handlePath ? {\n    context: handlePath.context,\n    path: t(\n      [handlePath.keyPrefix, issue.path.join(\".\")].filter(Boolean).join(\".\"),\n      {\n        ns: handlePath.ns,\n        defaultValue: issue.path.join(\".\")\n      }\n    )\n  } : {};\n  switch (issue.code) {\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.invalid_type:\n      if (issue.received === zod__WEBPACK_IMPORTED_MODULE_1__.ZodParsedType.undefined) {\n        message = t(\"errors.invalid_type_received_undefined\", {\n          ns,\n          defaultValue: message,\n          ...path\n        });\n      } else if (issue.received === zod__WEBPACK_IMPORTED_MODULE_1__.ZodParsedType.null) {\n        message = t(\"errors.invalid_type_received_null\", {\n          ns,\n          defaultValue: message,\n          ...path\n        });\n      } else {\n        message = t(\"errors.invalid_type\", {\n          expected: t(`types.${issue.expected}`, {\n            defaultValue: issue.expected,\n            ns\n          }),\n          received: t(`types.${issue.received}`, {\n            defaultValue: issue.received,\n            ns\n          }),\n          ns,\n          defaultValue: message,\n          ...path\n        });\n      }\n      break;\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.invalid_literal:\n      message = t(\"errors.invalid_literal\", {\n        expected: JSON.stringify(issue.expected, jsonStringifyReplacer),\n        ns,\n        defaultValue: message,\n        ...path\n      });\n      break;\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.unrecognized_keys:\n      message = t(\"errors.unrecognized_keys\", {\n        keys: joinValues(issue.keys, \", \"),\n        count: issue.keys.length,\n        ns,\n        defaultValue: message,\n        ...path\n      });\n      break;\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.invalid_union:\n      message = t(\"errors.invalid_union\", {\n        ns,\n        defaultValue: message,\n        ...path\n      });\n      break;\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.invalid_union_discriminator:\n      message = t(\"errors.invalid_union_discriminator\", {\n        options: joinValues(issue.options),\n        ns,\n        defaultValue: message,\n        ...path\n      });\n      break;\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.invalid_enum_value:\n      message = t(\"errors.invalid_enum_value\", {\n        options: joinValues(issue.options),\n        received: issue.received,\n        ns,\n        defaultValue: message,\n        ...path\n      });\n      break;\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.invalid_arguments:\n      message = t(\"errors.invalid_arguments\", {\n        ns,\n        defaultValue: message,\n        ...path\n      });\n      break;\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.invalid_return_type:\n      message = t(\"errors.invalid_return_type\", {\n        ns,\n        defaultValue: message,\n        ...path\n      });\n      break;\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.invalid_date:\n      message = t(\"errors.invalid_date\", {\n        ns,\n        defaultValue: message,\n        ...path\n      });\n      break;\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.invalid_string:\n      if (typeof issue.validation === \"object\") {\n        if (\"startsWith\" in issue.validation) {\n          message = t(`errors.invalid_string.startsWith`, {\n            startsWith: issue.validation.startsWith,\n            ns,\n            defaultValue: message,\n            ...path\n          });\n        } else if (\"endsWith\" in issue.validation) {\n          message = t(`errors.invalid_string.endsWith`, {\n            endsWith: issue.validation.endsWith,\n            ns,\n            defaultValue: message,\n            ...path\n          });\n        }\n      } else {\n        message = t(`errors.invalid_string.${issue.validation}`, {\n          validation: t(`validations.${issue.validation}`, {\n            defaultValue: issue.validation,\n            ns\n          }),\n          ns,\n          defaultValue: message,\n          ...path\n        });\n      }\n      break;\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.too_small:\n      const minimum = issue.type === \"date\" ? new Date(issue.minimum) : issue.minimum;\n      message = t(\n        `errors.too_small.${issue.type}.${issue.exact ? \"exact\" : issue.inclusive ? \"inclusive\" : \"not_inclusive\"}`,\n        {\n          minimum,\n          count: typeof minimum === \"number\" ? minimum : void 0,\n          ns,\n          defaultValue: message,\n          ...path\n        }\n      );\n      break;\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.too_big:\n      const maximum = issue.type === \"date\" ? new Date(issue.maximum) : issue.maximum;\n      message = t(\n        `errors.too_big.${issue.type}.${issue.exact ? \"exact\" : issue.inclusive ? \"inclusive\" : \"not_inclusive\"}`,\n        {\n          maximum,\n          count: typeof maximum === \"number\" ? maximum : void 0,\n          ns,\n          defaultValue: message,\n          ...path\n        }\n      );\n      break;\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.custom:\n      const { key, values } = getKeyAndValues(\n        issue.params?.i18n,\n        \"errors.custom\"\n      );\n      message = t(key, {\n        ...values,\n        ns,\n        defaultValue: message,\n        ...path\n      });\n      break;\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.invalid_intersection_types:\n      message = t(\"errors.invalid_intersection_types\", {\n        ns,\n        defaultValue: message,\n        ...path\n      });\n      break;\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.not_multiple_of:\n      message = t(\"errors.not_multiple_of\", {\n        multipleOf: issue.multipleOf,\n        ns,\n        defaultValue: message,\n        ...path\n      });\n      break;\n    case zod__WEBPACK_IMPORTED_MODULE_1__.ZodIssueCode.not_finite:\n      message = t(\"errors.not_finite\", {\n        ns,\n        defaultValue: message,\n        ...path\n      });\n      break;\n    default:\n  }\n  return { message };\n};\nvar zodI18nMap = makeZodI18nMap();\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/zod-i18n-map/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/zod-i18n-map/locales/en/zod.json":
/*!*******************************************************!*\
  !*** ./node_modules/zod-i18n-map/locales/en/zod.json ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"errors":{"invalid_type":"Expected {{expected}}, received {{received}}","invalid_type_received_undefined":"Required","invalid_type_received_null":"Required","invalid_literal":"Invalid literal value, expected {{expected}}","unrecognized_keys":"Unrecognized key(s) in object: {{- keys}}","invalid_union":"Invalid input","invalid_union_discriminator":"Invalid discriminator value. Expected {{- options}}","invalid_enum_value":"Invalid enum value. Expected {{- options}}, received \'{{received}}\'","invalid_arguments":"Invalid function arguments","invalid_return_type":"Invalid function return type","invalid_date":"Invalid date","custom":"Invalid input","invalid_intersection_types":"Intersection results could not be merged","not_multiple_of":"Number must be a multiple of {{multipleOf}}","not_finite":"Number must be finite","invalid_string":{"email":"Invalid {{validation}}","url":"Invalid {{validation}}","uuid":"Invalid {{validation}}","cuid":"Invalid {{validation}}","regex":"Invalid","datetime":"Invalid {{validation}}","startsWith":"Invalid input: must start with \\"{{startsWith}}\\"","endsWith":"Invalid input: must end with \\"{{endsWith}}\\""},"too_small":{"array":{"exact":"Array must contain exactly {{minimum}} element(s)","inclusive":"Array must contain at least {{minimum}} element(s)","not_inclusive":"Array must contain more than {{minimum}} element(s)"},"string":{"exact":"String must contain exactly {{minimum}} character(s)","inclusive":"String must contain at least {{minimum}} character(s)","not_inclusive":"String must contain over {{minimum}} character(s)"},"number":{"exact":"Number must be exactly {{minimum}}","inclusive":"Number must be greater than or equal to {{minimum}}","not_inclusive":"Number must be greater than {{minimum}}"},"set":{"exact":"Invalid input","inclusive":"Invalid input","not_inclusive":"Invalid input"},"date":{"exact":"Date must be exactly {{- minimum, datetime}}","inclusive":"Date must be greater than or equal to {{- minimum, datetime}}","not_inclusive":"Date must be greater than {{- minimum, datetime}}"}},"too_big":{"array":{"exact":"Array must contain exactly {{maximum}} element(s)","inclusive":"Array must contain at most {{maximum}} element(s)","not_inclusive":"Array must contain less than {{maximum}} element(s)"},"string":{"exact":"String must contain exactly {{maximum}} character(s)","inclusive":"String must contain at most {{maximum}} character(s)","not_inclusive":"String must contain under {{maximum}} character(s)"},"number":{"exact":"Number must be exactly {{maximum}}","inclusive":"Number must be less than or equal to {{maximum}}","not_inclusive":"Number must be less than {{maximum}}"},"set":{"exact":"Invalid input","inclusive":"Invalid input","not_inclusive":"Invalid input"},"date":{"exact":"Date must be exactly {{- maximum, datetime}}","inclusive":"Date must be smaller than or equal to {{- maximum, datetime}}","not_inclusive":"Date must be smaller than {{- maximum, datetime}}"}}},"validations":{"email":"email","url":"url","uuid":"uuid","cuid":"cuid","regex":"regex","datetime":"datetime"},"types":{"function":"function","number":"number","string":"string","nan":"nan","integer":"integer","float":"float","boolean":"boolean","date":"date","bigint":"bigint","undefined":"undefined","symbol":"symbol","null":"null","array":"array","object":"object","unknown":"unknown","promise":"promise","void":"void","never":"never","map":"map","set":"set"}}');

/***/ }),

/***/ "(ssr)/./node_modules/zod-i18n-map/locales/es/zod.json":
/*!*******************************************************!*\
  !*** ./node_modules/zod-i18n-map/locales/es/zod.json ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"errors":{"invalid_type":"Se esperaba {{expected}}, se recibió {{received}}","invalid_type_received_undefined":"Requerido","invalid_type_received_null":"Requerido","invalid_literal":"Valor literal inválido, se esperaba {{expected}}","unrecognized_keys":"Llave(s) no reconocida(s) en el objeto: {{- keys}}","invalid_union":"Entrada inválida","invalid_union_discriminator":"Valor discriminador inválido. Se esperaba {{- options}}","invalid_enum_value":"Valor inválido. Se esperaba {{- options}}, se recibió \'{{received}}\'","invalid_arguments":"Argumentos de función inválidos","invalid_return_type":"Tipo de retorno de función inválido","invalid_date":"Fecha inválida","custom":"Entrada inválida","invalid_intersection_types":"Valores de intersección no pudieron ser mezclados","not_multiple_of":"Número debe ser múltiplo de {{multipleOf}}","not_finite":"Número no puede ser infinito","invalid_string":{"email":"{{validation}} inválido","url":"{{validation}} inválido","uuid":"{{validation}} inválido","cuid":"{{validation}} inválido","regex":"Inválido","datetime":"{{validation}} inválida","startsWith":"Entrada inválida: debe comenzar con \\"{{startsWith}}\\"","endsWith":"Entrada inválida: debe finalizar con \\"{{endsWith}}\\""},"too_small":{"array":{"exact":"La lista debe contener exactamente {{minimum}} elemento(s)","inclusive":"La lista debe contener al menos {{minimum}} elemento(s)","not_inclusive":"La lista debe contener más de {{minimum}} elemento(s)"},"string":{"exact":"El texto debe contener exactamente {{minimum}} carácter(es)","inclusive":"El texto debe contener al menos {{minimum}} carácter(es)","not_inclusive":"El texto debe contener más de {{minimum}} carácter(es)"},"number":{"exact":"El número debe ser exactamente {{minimum}}","inclusive":"El número debe ser mayor o igual a {{minimum}}","not_inclusive":"El número debe ser mayor que {{minimum}}"},"set":{"exact":"Entrada inválida","inclusive":"Entrada inválida","not_inclusive":"Entrada inválida"},"date":{"exact":"La fecha debe ser exactamente {{- minimum, datetime}}","inclusive":"La fecha debe ser mayor o igual al {{- minimum, datetime}}","not_inclusive":"La fecha debe ser mayor que el {{- minimum, datetime}}"}},"too_big":{"array":{"exact":"La lista debe contener exactamente {{maximum}} elemento(s)","inclusive":"La lista debe contener como máximo {{maximum}} elemento(s)","not_inclusive":"La lista debe contener menos que {{maximum}} elemento(s)"},"string":{"exact":"El texto debe contener exactamente {{maximum}} carácter(es)","inclusive":"El texto debe contener como máximo {{maximum}} carácter(es)","not_inclusive":"El texto debe contener menos de {{maximum}} carácter(es)"},"number":{"exact":"El número debe ser exactamente {{maximum}}","inclusive":"El número debe ser menor o igual a {{maximum}}","not_inclusive":"El número debe ser menor que {{maximum}}"},"set":{"exact":"Entrada inválida","inclusive":"Entrada inválida","not_inclusive":"Entrada inválida"},"date":{"exact":"La fecha debe ser exactamente {{- maximum, datetime}}","inclusive":"La fecha debe ser menor o igual al {{- maximum, datetime}}","not_inclusive":"La fecha debe ser menor que el {{- maximum, datetime}}"}}},"validations":{"email":"correo","url":"enlace","uuid":"uuid","cuid":"cuid","regex":"expresión regular","datetime":"fecha"},"types":{"function":"función","number":"número","string":"texto","nan":"valor no númerico","integer":"entero","float":"decimal","boolean":"booleano","date":"fecha","bigint":"entero grande","undefined":"indefinido","symbol":"símbolo","null":"nulo","array":"lista","object":"objeto","unknown":"desconocido","promise":"promesa","void":"void","never":"nunca","map":"mapa","set":"conjunto"}}');

/***/ })

};
;